[시스템 프로그래밍 기본]




1. 컴파일 환경
작성한 프로그램을 실행하기 위해서는 컴파일을 해야한다. 컴파일이란 텍스트로 작성한 프로그램을 시스템이 이해할 수 있는
기계어로 변환하는 과정이다.

컴파일의 과정의 아래와 같다.
test.c는 printf 함수만 사용한다는 것을 가정

test.c(소스코드) -> test.o(소프 파일을 컴파일한 파일 -> 오브젝트 파일 -> 링크 ) -> test.o + printf.o -> a.out(실행 파일)

오브젝트 파일과 실행 파일의 차이점

오프젝트 파일 (Object File):

오프젝트 파일은 소스 코드를 컴파일한 결과물 중 하나입니다.
컴파일러는 소스 코드를 기계어나 중간 언어로 번역한 후, 이를 오프젝트 파일 형식으로 저장합니다.
여러 소스 파일을 컴파일한 경우 각각의 소스 파일에 대한 오프젝트 파일이 생성됩니다.
오프젝트 파일은 아직 완전한 실행 코드가 아니며, 라이브러리 함수나 다른 오프젝트 파일과 링크하여 실행 파일을 생성하는 과정이 필요합니다.
실행 파일 (Executable File):

실행 파일은 컴파일된 소스 코드와 필요한 라이브러리 및 리소스가 모두 포함된 완전한 프로그램입니다.
컴파일러나 링커(Linker)가 여러 오프젝트 파일과 라이브러리를 결합하여 실행 파일을 생성합니다.
실행 파일은 컴퓨터에서 직접 실행할 수 있으며, 프로그램의 동작을 시작하는 역할을 합니다.

컴파일러나 링커(Linker)가 여러 오프젝트 파일과 라이브러리를 결합하여 실행 파일을 생성합니다.







(1) GNU C 컴파일러: gcc
프로그램을 컴파일하려면 이를 수행하는 컴파일러가 설치되어 있어야 함
리눅스에는 gcc가 존재

-c 옵션: 오브젝트 파일만 생성
-o 실행 파일 명: 지정한 이름으로 실행하일을 생성한다. 기본 실행 파일명은 a.out이다.




