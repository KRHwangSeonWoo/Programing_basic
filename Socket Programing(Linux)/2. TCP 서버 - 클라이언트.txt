2. TCP 서버 - 클라이언트


1. TCP 서버 - 클라이언트 핵심 동작 과정

1) 서버는 클라이언트가 접속하기를 기다림 (listen)
2) 클라이언트는 서버에 접속 (connect)하고, 서버는 이 접속을 수용함 (accept)
3) 클라이언트는 서버에 데이터를 보내고 (send), 서버는 클라이언트가 보낸 데이터를 받아 처리함 (recv)
4) 서버는 처리한 데이터를 클라이언트에 보냄 (send)
5) 클라이언트는 서버가 보낸 데이터를 받아 처리함 (recv)
6) 데이터를 주고 받는 과정을 모두 마치면 접속을 끊음 (close)


2. TCP 서버 - 클라이언트 자세한 동작 원리

* 핵심 *
TCP 서버는 세션을 맺는 소켓따로 세션을 맺고 나서 클라이언트와 실질적인 데이터 통신을 하는 소켓 따로 있다.
소켓하나당 포트하나를 할당하는 것이 아니다. 하나의 포트안에 여러개의 논리적인 소켓을 할당할 수 있다.

1) 서버는 소켓을 생성한 후 클라이언트가 접속하기를 기다린다.
또한 서버가 사용하는 소켓은 특정 포트와 결합되어 있어 이 포트 번호로 접속하는 클라이언트만 수용할 수 있다.
2) 클라이언트가 서버에 접속한다. 이때 3 way 이후 패킷 교환이 일어난다.
3) 3 way 이후 서버는 접속한 클라이언트와 통신할 수 있는 새로운 소켓을 생성한다.
이 소켓을 이용하여 서버와 클라이언트는 데이터를 주고 받는다.
기존 소켓은 새로운 클라이언트 접속을 수용하는데 계속 사용한다.
4) 두 클라이언트가 접속할 경우, 서버에는 총 3개의 소켓이 생성된다. 2 소켓은 클라이언트와 통신할 때의 소켓이고
나머지 하나는 새로운 클라이언트와 TCP 3 way를 하기 위한 소켓이다.

* 일반적으로 하나의 클라이언트에 하나의 세션을 가질 수 있지만, 하나의 클라이언트에 여러 세션을 가질 수 있다.


3. TCP 서버 - 클라이언트 구현

서버(에코 서버): 클라이언트가 보낸 데이터를 받아서 (recv) 이를 문자열로 간주하여 화면에 출력한다 (print).
그런 다음 받은 데이터를 변경 없이 다시 클라이언트에 보낸다. (send)

클라이언트(에코 클라이언트): 사용자가 입력한 문자열을 서버에 보낸다 (send). 서버가 데이터를 그대로 돌려 보내면 이를 그대로 받아서 (recv)


화면에 출력한다. (printf)
