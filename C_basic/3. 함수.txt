[함수]

1. 함수 개요

1) 함수의 기본 구조
########################################################################################################################################
#include <stdio.h>

int add(int a, int b) {
	
	int c = a + b;
	return c;
}

int main() {

	printf("%d", add(1, 2));
	//3
	
}
########################################################################################################################################






2) 함수 프로토타입
함수 프로토타입 -> java의 추상메소드같은 느낌
먼저 함수의 구현부를 제외한 나머지를 정해고 해당 규칙에 맞게 구현부를 만들어 사용함 -> 틀을 먼저 만들고 사용
########################################################################################################################################
#include <stdio.h>

int add(int a, int b);

int add(int a, int b) {
	return a + b;
}

int main() {
	printf("%d", add(1, 3));
	//4
}
########################################################################################################################################








3) void 함수의 return
함수 실행의 끝은 return으로 끝내지만 void 함수일 경우 return이 없을 수 있다. 이때 뒤에 불필요하게 수행할 코드가 있다면, return;을 이용하여 함수 종료시키자.
########################################################################################################################################
#include <stdio.h>

void num(int n) {
	if (n == 1) {
		printf("숫자는 1이다.");
		return;
	}
	else if (n == 2) {
		printf("숫자는 1이다.");
		return;
	}
}


int main() {
	num(1);
	//숫자는 1이다.
}
########################################################################################################################################



4) 반환형의 의미
반환형은 함수에서 return했을 때 받을 수 있는 값을 말한다.
예)
int * a(){ return [주소값]}
int a(){ return [정수]}
########################################################################################################################################
#include <stdio.h>
#include <string.h>
#include <stdlib.h>


int* return_int_address(int* a) {
	return a;
}

int return_int(int* a) {
	printf("%d", *a);
	return *a;
}

int main() {

	int a = 4;
	int* ptr = &a;
	int* b = return_int_address(ptr);
	//4

	
	int c = return_int(ptr);
	printf("%d", c);
	//4

}
########################################################################################################################################











2. 재귀함수
함수 본체를 실행하는 도중에 다시 자신을 호출함수를 뜻함
##################################################################################################################################
#include <stdio.h>

int value(int n) {
	if (n == 0) {
		return 1L;
	}
	else {
		return n * value(n - 1);

	}

	

}
int main() {
	printf("%d", value(3));

/*	
value(3) 호출
3 * value(2) 반환
3 * (2 * value(1)) 반환
3 * (2 * (1 * value(0))) 반환
3 * (2 * (1 * 1)) 반환
3 * (2 * 1) 반환
3 * 2 반환
6 반환
*/

}
##################################################################################################################################

