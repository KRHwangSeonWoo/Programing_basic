12. 템플릿 1









1.  함수 템플릿이란
매개변수와 return 등을 특정 자료형을 적시하지 않은 함수
-> 호출 시 자료형을 기재해야 한다.
##########################################
int add(int num1, int num2){
return num1 + num2;
}

->

template <typename T>
T Add(T num1, T num2){
return num1 + num2;
}
##########################################



[예제]
##########################################
#include<iostream>

template <typename T>
T Add(T num1, T num2) {
	return num1 + num2;
}

void main() {
	std::cout << Add<int>(20, 30.3);
	std::cout << Add<float>(20, 30.3);
	//50
	//50.3
}
##########################################


[Type을 명시하지 않은 경우, 컴파일러가 자동으로 형을 판단]
- 인자 TYPE 2개를 T로 선언하고 인자 두개가 일치하지 않을 경우 error 발생
##########################################
#include<iostream>

template <typename T>
T Add(T num1, T num2) {
	return num1 + num2;
}

void main() {
	std::cout << Add(29.5, 30.3);
	//std::cout << Add(29, 30.3); -> error

}
##########################################





2. 함수 템플릿과 템플릿함수

1) 함수 템플릿
앞서 보인 정의를 함수 템플릿이라고 한다.
***************************************
template <typename T>
T Add(T num1, T num2){
return num1 + num2
}
***************************************


2) 템플릿 함수
함수 템플릿으로 컴파일러가 만들어 내는 다음 유형의 함수를 템플릿함수라고 한다.

**************************************
int Add<int> (int num1, int num2){
return num1 + num2
}
**************************************




